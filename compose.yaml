services:

  postgres:
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/init/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    profiles:
      - dev
      - prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      APP_DB: ${APP_DB}
      APP_DB_SCHEMA: ${APP_DB_SCHEMA}
      APP_DB_USER: ${APP_DB_USER}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}

      FLYWAY_DB_USER: ${FLYWAY_DB_USER}
      FLYWAY_DB_PASSWORD: ${FLYWAY_DB_PASSWORD}

      KEYCLOAK_DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER}
      KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - ${ADMINER_PORT}:8080
    profiles:
      - dev

  mongo:
    image: mongo
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - mongo_data:/data/db
    profiles:
      - dev
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    profiles:
      - dev
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:${MONGO_PORT}
      ME_CONFIG_BASICAUTH: false

  keycloak:
    image: keycloak/keycloak
    restart: always
    ports:
      - ${KEYCLOAK_PORT}:8080
    volumes:
      - ./src/main/resources/keycloak/import:/opt/keycloak/data/import
    command:
      - "start-dev"
      - "--import-realm"
    profiles:
      - dev
      - prod
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: ${KC_DB}
      KC_DB_URL: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=${KEYCLOAK_DB_SCHEMA}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}

  prometheus:
    image: prom/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    volumes:
      - ./src/main/resources/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    profiles:
      - prod

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - ./src/main/resources/monitoring/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ./src/main/resources/monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./src/main/resources/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    profiles:
      - prod

  app:
    image: app:latest
    build:
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - ${APP_PORT}:8080
    profiles:
      - prod
    environment:
      - SPRING_APPLICATION_NAME=${SPRING_APPLICATION_NAME}
      - APP_PORT=${APP_PORT}
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASSWORD=${APP_DB_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_SHOW_SQL=${SPRING_JPA_SHOW_SQL}
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - FLYWAY_DB_USER=${FLYWAY_DB_USER}
      - FLYWAY_DB_PASSWORD=${FLYWAY_DB_PASSWORD}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - FILE_UPLOAD_MAX_SIZE=${FILE_UPLOAD_MAX_SIZE}
      - FILE_UPLOAD_ALLOWED_TYPES=${FILE_UPLOAD_ALLOWED_TYPES}

volumes:
  postgres_data:
  mongo_data:
