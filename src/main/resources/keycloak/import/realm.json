{
  "id": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
  "realm": "prototype",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "264e3b5b-9255-4c3c-84f0-977b87fcbfda",
        "name": "user",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
        "attributes": {
        }
      },
      {
        "id": "e3522808-bafa-4843-9771-ace638803cf7",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
        "attributes": {}
      },
      {
        "id": "248d1461-964a-44d1-abd5-8b7a38b6eaae",
        "name": "default-roles-prototype",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
        "attributes": {
        }
      },
      {
        "id": "2cb4a995-43e4-445f-906f-cc7a41b6a782",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
        "attributes": {}
      },
      {
        "id": "25670435-25fe-45cf-b352-dbc42565b782",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "10a9e217-1716-4ba9-a5d7-83e9534b066c",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {
          }
        },
        {
          "id": "79a7d17c-1731-4fd9-bbe4-98aaaeffb684",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "9b0b2c06-b079-4860-8402-61f5fcb4d749",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "0baefbff-191a-4700-ae81-c5d4918bb406",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "58e9d393-df2e-485a-8f44-08e21d7363fd",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "61e83d9e-8b89-4abc-adcd-0c8e5eb60171",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "5fa57066-eb9b-4f47-a895-154129964bc7",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {
          }
        },
        {
          "id": "dc7fb2ea-6583-4b89-b60a-c48602937c26",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "3867671f-e4d0-4183-af7f-d8f2fd33fd73",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {
          }
        },
        {
          "id": "519edce4-2918-4f41-bd50-501883ac1550",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "cfec7850-8048-4ad3-b512-2834197af644",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "dcdf0754-a3dd-49e3-88d0-9d2972eb9344",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "06b33c48-6c63-4877-ba3a-57d63fef40ee",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "query-realms",
                "manage-realm",
                "manage-users",
                "query-users",
                "manage-authorization",
                "impersonation",
                "view-events",
                "view-users",
                "query-groups",
                "view-realm",
                "view-identity-providers",
                "query-clients",
                "view-authorization",
                "view-clients",
                "manage-clients",
                "manage-identity-providers",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {
          }
        },
        {
          "id": "775474e5-a74f-40c8-bbf9-66d43f1148e3",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "b3d204fb-1586-46e3-bc24-a0d943b8e4f4",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "16cae320-4d84-45c0-b6a4-b954d8a6f27e",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {
          }
        },
        {
          "id": "b2a3a161-eb2c-4fdd-ab43-c4477f3fb816",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "2e96dfa3-b298-4285-8005-1eecdab35f91",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        },
        {
          "id": "170d7e6d-8980-40d0-a9a0-ded260aa6677",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "f4fcdbfb-6f98-406b-8e31-7058a6759835",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "710c71eb-4aaa-422d-93e1-4b5c04f8d27e",
          "attributes": {
          }
        }
      ],
      "account": [
        {
          "id": "bf27ede6-60b3-4fbc-8a04-a7165be74a81",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {
          }
        },
        {
          "id": "f20c3347-37d3-4364-b6a2-08e2cee38f6a",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {}
        },
        {
          "id": "88f78389-47fd-47b1-912e-58df492ba685",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {
          }
        },
        {
          "id": "8e972f10-be67-42b3-b689-c7622f7de1cb",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {}
        },
        {
          "id": "95c9fa42-2c43-498b-a5b9-92fbc81b80b0",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {}
        },
        {
          "id": "7f68bbca-b66d-4165-a9b0-322af174ac7b",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {}
        },
        {
          "id": "ed734d7b-0e22-4f3a-ac4c-2e94b5a5b4ab",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {
          }
        },
        {
          "id": "4ece951a-053a-403f-b62b-1640d0dd80e5",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
          "attributes": {}
        }
      ],
      "prototype-app": []
    }
  },
  "groups": [
    {
      "id": "3936ff74-2045-4af4-92ed-1e94a1c4cec3",
      "name": "admins",
      "path": "/admins",
      "subGroups": [],
      "attributes": {
      },
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
      }
    },
    {
      "id": "d7eba70f-d994-44c2-aaa5-060c5a6ee163",
      "name": "users",
      "path": "/users",
      "subGroups": [],
      "attributes": {
      },
      "realmRoles": [
        "user"
      ],
      "clientRoles": {
      }
    }
  ],
  "defaultRole": {
    "id": "248d1461-964a-44d1-abd5-8b7a38b6eaae",
    "name": "default-roles-prototype",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "565e7f0c-4caf-48b3-a099-1b76a6ffc4cc"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {
  },
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "username": "admin@gmail.com",
      "firstName": "Admin",
      "lastName": "Admin",
      "email": "admin@gmail.com",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "123456"
        }
      ],
      "groups": [
        "/admins"
      ]
    },
    {
      "username": "user@gmail.com",
      "firstName": "User",
      "lastName": "User",
      "email": "user@gmail.com",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "userLabel": "123456",
          "createdDate": 1735123870626,
          "secretData": "{\"value\":\"e7i5zOIPJ+qSBO2RdjTxRXj7SPD56e+2M7lSzKFqVlo=\",\"salt\":\"z7cbWEKVbaig91DkhJbNnw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "groups": [
        "/users"
      ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "7e79f3cb-44db-4212-b2d7-8cdec0f5bd96",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/prototype/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/prototype/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "035f4c31-a570-4329-956c-f0546bc60764",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/prototype/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/prototype/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "325f144b-8da7-4b27-a3c2-b7c8b87cac95",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "201e935d-b7f7-4b95-a213-ac70b973d9ad",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "710c71eb-4aaa-422d-93e1-4b5c04f8d27e",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1d30fef0-03e6-4603-a043-7fb94d10fa06",
      "clientId": "prototype-app",
      "name": "",
      "description": "",
      "enabled": true,
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "protocol": "openid-connect",
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "05ebb07b-bfd7-4c2c-a343-5e67eae63416",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "85e3ccc6-8e4f-4ef4-a7c6-ae48b3bf71a8",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/prototype/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/prototype/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {
      },
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "b5498b49-9b0b-4345-b7ed-ca45d79356ad",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "c97b93c1-3fa7-439c-9bdd-5b399044a16c",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9dd35b21-49d8-4532-8a24-9f9dd46d5456",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "001ad972-d808-45aa-a9b1-07b61e1b273a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a4312eb1-d572-430a-8fce-2012e0f0cc3a",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a90f9d8c-ede2-492c-826b-2fc128c1dc11",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08b03a94-6da9-4730-b494-749e3bfc5041",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0dc444ab-cce0-43e3-b11f-89d8fd25ae66",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab6369a6-3fa4-450a-9c56-11a55d2e508e",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "360a0de9-9b84-413f-b9fd-06f33bc5e5b9",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "51983aab-3218-4698-b681-063f779eb500",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "82bae857-e53a-4e7d-b72f-a40745e17400",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cebc6787-7ff9-4704-ab78-e26a3722bb3f",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "2f35f423-7802-42b8-b80f-df26f9a44120",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "b0bfe003-de95-464d-b90c-3afe3412ff9e",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ff6f18ad-6cd7-4f19-a3e7-4670bdac996e",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "817c3f3c-dda9-432c-85f3-35c0af3751a7",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5be6ac79-7267-444a-9c2e-fa5e5c8af8cc",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "aff4a17c-b324-4777-8252-32103af9e02f",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "df27c6a6-937f-4517-a889-f559626f88f4",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "b5814120-ece1-4065-bf66-46d046193926",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e94f0ae6-9af6-4d1e-a594-41c005f2fc0c",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a1b7c5c3-cd2c-425e-8aa2-82b1b83cac7e",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {
          }
        }
      ]
    },
    {
      "id": "acffa71b-a6f7-498c-b409-40487dcd615f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8ee0ffdd-3e32-4a1c-91f2-26ae4e8791eb",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "5c6b6c41-3344-4e33-9925-06a7075a70b8",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "17a07903-d6b5-4964-ad80-a0d779ad0c4b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "aedcea3f-43ab-450e-84b1-49e692b4a398",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "fd105bb9-341a-4771-8f41-9bc8d81147bc",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "29686588-d433-4fb0-ad44-b5c476804a5a",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "05cb96c9-d890-4ff6-8bd8-f01f26cd0dfc",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "29e1242a-0d38-4e85-b964-ab1fa1cb2a8c",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "48ac62c3-b747-4479-ad3f-ac7960d31288",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b1c31771-6dfb-4313-98cd-9f566559d622",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a9d09cfe-3327-44b6-83db-7227be54c2f2",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "23030a2a-a8dd-49d2-9e9a-05314dc5e292",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "72450b0e-f650-4ecf-a8a9-eb1590c63fe0",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0aabd687-6837-47ca-b8de-0ce6c59bf229",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b742d9c-caa8-47d9-96d4-ef32cbc95f82",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "e19189b7-a799-4512-b7e9-7f00a80b35f8",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5177e912-1d29-485d-918e-e10ad86ced00",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "64ddfe99-1301-4564-a380-70bfa876f7b6",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8e584383-5d3d-4547-bf8a-9a17424846a5",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0a0f4306-97c8-433e-9885-52bf55fad885",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "73fbd3b7-3a46-4ac6-a931-68a5dee59623",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "7ac18c95-2675-4d3b-9f6e-7d97dd50c051",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "c83cbb77-8250-4156-a9e9-8278e0c6f4e4",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "2a1520d2-f305-475a-9901-ce0719f784f2",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "f535879e-1811-4d78-a79c-92a8de6ba70d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "9a14278d-9e6b-4e12-a963-9b82166452e0",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "06264351-7068-4f6d-82e1-e0476a22f46a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "a6976422-b5e2-4d81-b48a-eee4289786ea",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "9f2c9385-37d0-4558-9f43-0b5347960126",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "4cc29a8d-098b-4ea1-95dc-7a680de51dc1",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "b856aafc-8fe5-4c54-893c-dd0968cb2110"
          ],
          "secret": [
            "FIj5w9NGcl-LNE0P6MDY4w"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "3561835a-979c-44da-8944-e8ad0483ec42",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAw+78WW/YFHDQ04m87CAj7zpMeFeeK2/yX5/SL2uqrvRDmTWl89r7LLGoX/AdfdAbcrIEizKge7Ljh44V6HyAfTId3ytGkew0+o7NQNEbgA5jjZlZLDipAPKeYlQqJcqivlXCBxdF0KgTbAZJfAfFL9CgL3b9pCo/64UGmseLuyAzXIaA4fuyc6JSo+3JmMhmkjBtLKWP1X4+rWYt/8yBhifXeHDgLapWwaqlmdVZi692TLDJQzBqPkTAYTk1/E++WO5eCUxfWiHvt0cn+F7zEnDtHKKSsaS6u/U8AN9v/KA+v/Kd+HVW5QCiqxmRvkP5V2Ptr8Z4RT92Otqsk8MFiwIDAQABAoIBAF+/+6xNXwBmPXcTGbMe5dCz4cjxsIcztvOKK/ImoIvNLPfDYu0vt42Y6FqyAgeI2tELM/M+c3Tf8Bc/lW8+4J/ODRERmfQXxbAodx/U0Kac4YPCS/SzX8vpxQLydIJxa2SujhpfAiw85vjkfabSOUfroUxwzvUZ/JDBOoALQjrYX40Sn5utko2ffrwC8AZGloF5e7IoY6XJnJ0Xu3OJ+rfcKv+Zxu3PdLHMhtUbLBe7OE+/x9YwbPLc1pjrOhygLobTbtPFS1RUEVJ6RmX83Q1XxgDCEfAF6qph6tPbWRnzeuad3HQd9M3aPGYu/ff8X3R9By9fDhho/ptPEVKV/skCgYEA6UN8bKiRr46I6wFeoqJdTU3Rk3Wml1xWOA7UiQbLVQx4oxaY2c2TQAoigyFiLOHYoy8JOAp8nuzDyGyrfk8z7zyMGpFFktjsNIQsj0+ZcqcAeykNrc5+NyYH29Z4CBjbn1T2IaWQb0GbWzM6RpHr32QHzhQhZd4PlxiFr0eJl18CgYEA1wgFNKaHUhtE5rlFSUaiPvRsC8Ny4+3fLhvDt8M9DqE6WjM8qeuwd6AHo1Us9cpehJD9DvaxIaCTJD1n0C9I0V1q07zMr+RStafrqTH5P+mXFvnbEb6lezr1l04PeOvDwK1VCtf+nJ123MFDYEBpmFdR1K0PaRH6aZ9x7Y/SHVUCgYBdJkj6rzo2TAobJpnfAk2WADxv0WysRwBbNHjlG2R5WxiVsAFsAK8LxMBRczRcTfgP+kmJKo7nfA8W62Z0czZ/E8OzHE4XPS7eLeYJeLUDVvNXO2auAKbgaPx8aqHWQe76Kph7iT0rYJykh8l+wujZdX20as+HeWzqXq2L+FpWqwKBgAlFtUPB8o/d0SjJ0G0KeLCSRZ50PR4LAdaxJ81iw90/oo6FKxaArUlbQzkN0TSAF3dL8T2V8alrjSzA4RsfDtrIVnTu7TygcdiXdxgCqabR4cwB1ip7uBMKRdDScuRZ9kT2tHYVPktultOKGeeqn2MMUOEE3WdAeTXYxEbkLsFJAoGBAK0fq2y69f+oxq7LUBqrqiLBFCFr3mXuCPcrBk5fBobiddGVLjAYU1jSZdUb4JtGC6SPrFQWxWgTeybRnVspRC7NICwIrQM3VPmuEDvc6O38P/KEkxUtzxRmxfcRJgMypZxiwcpwz/Y9v18lrovsAaxzuE1jcBnO3m+sc7C6sN7k"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGUEnSSdjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlwcm90b3R5cGUwHhcNMjQxMjI5MTI0NTE3WhcNMzQxMjI5MTI0NjU3WjAUMRIwEAYDVQQDDAlwcm90b3R5cGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDD7vxZb9gUcNDTibzsICPvOkx4V54rb/Jfn9Iva6qu9EOZNaXz2vsssahf8B190BtysgSLMqB7suOHjhXofIB9Mh3fK0aR7DT6js1A0RuADmONmVksOKkA8p5iVColyqK+VcIHF0XQqBNsBkl8B8Uv0KAvdv2kKj/rhQaax4u7IDNchoDh+7JzolKj7cmYyGaSMG0spY/Vfj6tZi3/zIGGJ9d4cOAtqlbBqqWZ1VmLr3ZMsMlDMGo+RMBhOTX8T75Y7l4JTF9aIe+3Ryf4XvMScO0copKxpLq79TwA32/8oD6/8p34dVblAKKrGZG+Q/lXY+2vxnhFP3Y62qyTwwWLAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAELySUdeonyYT8jKS0tX0f1Mc4xZ/Ta4jNiX+9tCwKRL1yvnVLTZGgrCINXGz0dRWUtqBklQWoDwPXGKMfHs1YENjSTVdqd/KbbX+HTDoyWYzJkBGHozu3e4bJq3KIno9tUhXb38pLPRip9KF5tRFdjFLSkGbhTF+jkaI6Atgs0gkeuy4PaLQ0VHbgQpDVVQXhLOATTAn3ZRjpaKBenPJZAFGRqE+RhRegrxo/2ZET0zEHCfIhKKjEF8GAimhGtFEuj2YpXVHVeBVueUm9hEBe99ogB6Wz9OI4M+19FEL1XRWDSnNiBHdTuv1g8YnaJ4C9XLPSpXCRcxYHx8gCS4YKg="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "b62cbce1-3374-427a-8c78-ffcb18696680",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAj9OdbA8TaQRhhlZu4qJzOpHrpFw72b6aobdfRW9ry/ftDMfMD+tkK7ptMJXBBimO2DwJpJCBmUQhrbsVPGwsblEIcZE9fiB2q+fRUyMCem1bxcLDFaaZAtjEaIshZRHV+SM4+EDEPotviee8GBn/eJrogUYI2x/wjtENd3Paoo5f02QjMHN8/KW/C3eoHNLITy5rFI1T9Xt+socNBxa/0ICApoyC/G5bJ4ZQbCpfY2Sma+4sLoh1DR4atEJisloFmCGDJJcxLZlverWBtYG1P16uXK/XLVuwFuKg3+ic2lPfrHCWkKM1Sgp3s+VA9/qEPKGXohv7qqJhA6//+xBYnQIDAQABAoIBACIjlMZFfdH7nDqK4Z8h+D/6yvgkfIBe4c1o/VA59lhf7QCPnDxbH1fR1IEnyr1vt9xTw+Yv9tMufOAD/DJvasx0p5BtbS82/XQofmNBeCEfPB1g8XV+KeunEFfQTojzBtswJSGoHezKpBsTym3eHem+u1mUCh4ZIryDmrKz6T2UOrVzT3aSI6//9fyf6EuIV2sz5nf+vDjv32DoYjOLS6JtYhLpYQk5h+FS/h37tOcQW7EBH6CMUMHxg4GTOViO8ZB9y2rReKciR68ocUKViIhLW7jqLlMCePIuNL8CI0XY/vtAbOUFkmtAG0TFRQy6P3iEpseXr2fgXVGM/9K5BfECgYEAyEJn4bYrWQhrxGEMKtZBTT3J7W1buPO8WShN/rTMflknX6Dvg3SxJjgPg2I8V60CF8Wu5VegREOxifcbXLbJCMI5g/p9M+7Khap9iwtvRqHbrAzZag3M5ZhHXyV4AZnQVmdNRoE3WmPkMqywaUU9K/Z/9RcjngDiTPc9U9Xkwb8CgYEAt9wPdk43pYgUOk97Z38JgAMvaDIAoHnQH+6L8kfMik7ZFnwcPfT4Gn3ue6kzTFL3R7tMXadhjbJpxt0IkDjpfVasfaxboI0o2h94y8LolLLoQA2E0E3z1fAKMUBqYZaLfNMiyKGEFqf3sE+sOOQv4UeT2xV+qzbSGFyWMj0eBKMCgYA3UFBNQfobL35E0eGAe4myAh0iXZB2N6yQm9dfQSUyyQFdIqDFmJfNzLJMQfgU546qbknuwxNbh68kQoLmSv6gUrV8RNYMYCrEXOEsZM4pnk+E6E+tQX6U9EjSeRD6sDehhgsMLGjTqL/BV32qths9Z2rUkb2eyPO4+pmP7IaxFQKBgGISgjTq+AfWFGQeLYdBXkHocQs1UNxI3dmKlx+/aL2F3Yp+3Vm3J/iJoAJaeMCHqNucbtmuBP1eY8nt8TltAi8XYp8Opzl20om3K+oUp5dZ70TrcSLj0eMWTXmEELrJYNJOlUlLznd/VUG43fbi0R9r3NSKHK0bauoPyRY3P6HdAoGBAJ3ZjS7VXxumyc6KL5MiPy6aWt72Pwf8FPvY8VmdFZhF4iBeNn9AAp91i4stMchtOvnZMOhLpaPKBKwcy/ZtDGUiKeishqD8BVRhHkIPffWFOi4toax4/sdyWJx4Mt3xQzJg28STE1fPbpfS2bpfIjwfHIItIJR3bj9zTEZ0U6Sc"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGUEnSTSTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlwcm90b3R5cGUwHhcNMjQxMjI5MTI0NTE3WhcNMzQxMjI5MTI0NjU3WjAUMRIwEAYDVQQDDAlwcm90b3R5cGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCP051sDxNpBGGGVm7ionM6keukXDvZvpqht19Fb2vL9+0Mx8wP62Qrum0wlcEGKY7YPAmkkIGZRCGtuxU8bCxuUQhxkT1+IHar59FTIwJ6bVvFwsMVppkC2MRoiyFlEdX5Izj4QMQ+i2+J57wYGf94muiBRgjbH/CO0Q13c9qijl/TZCMwc3z8pb8Ld6gc0shPLmsUjVP1e36yhw0HFr/QgICmjIL8blsnhlBsKl9jZKZr7iwuiHUNHhq0QmKyWgWYIYMklzEtmW96tYG1gbU/Xq5cr9ctW7AW4qDf6JzaU9+scJaQozVKCnez5UD3+oQ8oZeiG/uqomEDr//7EFidAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHyhnnPI2mGfGVTFwz3USAi4iZ0/t7f8AYaCjmX0BWXE6xp1rev/Z32BvH+x6nBFbzxJvFX/yOdgxY41rS6PEm2tajIPYPju4CnwW8T8VHaI7lFia/XKucSsQsk7IBGTTofPXhAMqiGW+PAvEg2L7T8TFGRb1dP48hFGQF7EuEjULnUwav68Zr2mN2eqF1tpW0ybyRI1em3q9LzVWi+RopbiOHh20qGBN0Mmm3VBsgtOVkZVBUy6SUroQAbUqsCJSnAGZVdadT3stZGenFVM9/oxgLgGRwY09aQAKz6MuBVmEeNcZFU8I6y4fbSZYkXkucDtiDl3JheL0k8cqL03KOs="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "241501f3-6edf-4956-845f-34d7eca5c1e3",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "59760f54-e977-4d93-b2e6-8046202af68f"
          ],
          "secret": [
            "ckPGDI01cNrAkbMIbOQ86dqWCpvKhI7pYqPN4t15Riw71ZuN-kHw9MNAb3P6ozbs3nbyTBp5EN6miLazVg60lN090wRXYezOj8Nr9zho9VPwMY4RcFKwbdPflL9AltELhgXS1ALZL2npYBDQZF_3JoauZNeyztAg_i1yJ34wZH4"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "82cd01b7-d08f-42b6-a423-cc8534e46b66",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "879d6b1e-0f7f-4f23-b608-edc1db923572",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "128481e9-f960-4c38-ac9c-61af778444ca",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e9dd3a1f-8992-4ae1-a8fd-4e0ed662672d",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d492810a-701f-4e08-b417-77a6918cf7c9",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e4144036-8330-4c29-a6f8-bcd642968e59",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9bd0736d-c27f-41ed-871a-af683658d72c",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d5f1733d-b3e2-4a5d-ad74-ba4847847762",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c897bad1-b157-4374-800e-72f5d24c8236",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "336d41a2-31c1-4fd7-b68b-f917ab2c9a6f",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4a0c103f-e1de-40fc-a66c-e059c790072e",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c7581c51-277c-43b3-ac1d-3cdaf13bc9bb",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b90e9ad5-d4f4-4b6c-80b1-ca289c1a387d",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "074dbfbc-3e55-46eb-89ac-109ccf237050",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2bd9ea56-70b1-411e-bc93-8bf99aeff655",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6e6dae29-1cbf-41f0-97ad-c05a12b8689e",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ae57d9bc-8a6a-4e71-92ce-ac218391c5c7",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ed49ce74-f9c8-45c0-9e00-85418acb8832",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67744a0e-6fbd-456f-9653-b2d9100ca79c",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1dc53602-9eba-4430-80d7-ac6d1516f5c4",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ca0e9d0a-5489-4796-857a-4fcbdf4b8a55",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "82f2562b-c92c-48be-9af3-35b22e76d86a",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "6c1dbccf-8e16-45df-83e2-561e26f352a7",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {
      }
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {
      }
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {
      }
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false"
  },
  "keycloakVersion": "26.0.7",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}